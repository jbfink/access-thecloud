Cloudbusting
===

Nick Ruest & John Fink


Nick Ruest is the Digital Preservation Librarian, Repository Architect and Digitization Coordinator at McMaster University. He oversees the technical aspects of the library's digital initiatives, develops policies and workflows for digital preservation, digitization and metadata delivery, writes really bad code, and manages a number of servers. He is also the Vice-President/President elect of the Ontario Library and Technology Association as well as the President of the McMaster University Academic Librarians Association and a CAUT Defence Fund trustee. In his spare time he thinks about writing music again, and reads way too many graphic novels.


John Fink is the Digital Scholarship Librarian at McMaster University and is currently attached to McMaster's Sherman Centre for Digital Scholarship.  He looks after the Centre's computing infrastructure, handles internal and external communications for the Centre, and is, as much as anyone is, the Centre's project manager. He also writes bad code. He enjoys surf music, the ocean, bicycles, and seeing snow from a distance.

## What is “the cloud”? 

Have you ever had an IT related idea you want to implement at your library, only to be told that your library doesn't have the resources, time, or labour to help you? Chances are you have, and you're also likely to have heard something about cloud computing, and maybe even been told that cloud computing is a way to get your ideas moving quickly without having to worry about things like computing infrastructure or colleague time. Is cloud computing the end of systems departments as we know it? Or is it merely another tool in the systems librarian's arsenal?

The _cloud_ is a **lie**. Don’t believe the hype. It is not some mythical internet saviour, undoable by smaller organizations. The cloud has existed ever since computers have been able to talk to other computers; early BBS systems were cloud systems just as much as Amazon's virtual server infrastructure is. To put it simply, cloud computing refers to the delivery of scalable IT resources over the Internet. The most recent iteration of talk about cloud services is a marketing term.

Do you use a web based email interface, or do you use GMail or Google Docs? Have you streamed a movie or TV show from Netflix?  You've played in the cloud. 

Have a difficult IT department? Want to work on some rapid prototyping of a library application? Don't have a local storage solution or need a viable off-site storage option? Then the cloud might just be perfect for you and your library!

Consider the typical workflow for a new, non-trivial library service, hosted locally: you have an idea, and you want to implement it. You proceed to ask your systems department about implementing your idea. You probably presented with one of the following varations of _no_: you are told that you can't do your idea because there's no equipment for it, it's too complicated, or it involves unsupported software. For there you most likely give up, or wait about a year and hope things have changed a it and repeat steps 1-3. In a cloud scenario, you have an idea, you scurry on over to a cloud provider, spin up some sort of instance that day for a small fee, and get that idea working!

## What can I do my library do in "the cloud"?

Short answer, a lot! Your library's ILS can be "cloud" based. For example, see Project Conifer the Ontario Academic Library Evergreen consortium, or McMaster University's hosted Symphony ILS. You can also take advantage of Content Management Systems such as Wordpress and Drupal in the cloud (http://wordpress.com and http://drupalgardens.com). If you're more of the hacker type, you can deploy and scale applications on a wide variety of platforms at Heroku (http://heroku.com). If you want your own customizable instances of Wordpress, Drupal, Joomla, or Redmine check out BitNami (http://bitnami.org) which touts a simple "one-click cloud hosting" option. Just need a server and don't want to have to worry about maintaining any hardware, or local IT can't help you out? You can create some highly customizable instances from a wide variety of Linux flavours or even Windows Server on a service like Amazon's EC2 (http://aws.amazon.com/ec2) Finally, need somewhere to store some files, or thinking about another option for that off-site digital preservation option? You can start small with cloud storage solutions like Dropbox (http://dropbox.com) and go large with Amazon S3 (http://aws.amazon.com/s3/) or Duracloud (http://duracloud.org).

## Your own happy local cloud.

But let's say you have a decent size systems presence already, and you're just looking for ideas on how to use your existing hardware and expertise more flexibly.  Software packages like Gluster (http://glusterfs.org) can help you combine many disparate hard drives -- even on completely separate computers -- into one large virtual drive.  If you're a database nerd, it might be worth looking into the new technology of key-value stores like Facebook's (jf: verify) Cassandra technology. 

Amazon's EC2 platform has a number of locally implementable competitors as well. If you have a beefy enough server PC and a bit of know-how, software like Eucalyptus, Openstack or KVM can help you create virtual machines on the fly with a variety of operating systems installed. These VMs can then be used without worrying that a crash will affect your entire infrastructure.

## What can I do in a local cloud?

* Storage
  * gluster
  * Cassandra / other distrib key-value
* EC2-alikes
  * Eucalyptus
  * Openstack!
  * KVM-ish
  * FAWN
  * cloud-crowd (snerk)

## When local, and when outsource?

